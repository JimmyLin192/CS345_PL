pass(List) :- parse(List, AST), evaluate(AST, X), writeln(X).

% Should pass:
pass(['return', '(', 1, ')', '.']).
pass(['return', '(', 6, '+', 3, '*', 5, ')', '.']).
pass(['return', '(', '(', 6, '+', 3, ')', '*', 5, ')', '.']).
pass(['return', '(', 6.5, '+', 3.25, '*', 5.8, ')', '.']).
pass(['var', 'a','<-', '(', 5, '*', 2, ')', ';', 'return', 'a', '.']).
pass(['var', 'x', ';', 'x','<-', '(', 5, '*', 2, ')', ';', 'return', '(', 'x', '+', 1, ')', '.']).
pass(['var', 'x','<-', '(', 5, '*', 2, ')', ';', 'return', '(', 'x', '+', 1, ')', '.']).
pass(['var', 'x', ';', 'x','<-', '(', 5, '*', 2, ')', ';', 'var', 'y', '<-', 1, ';', 'return', '(', 'x', '+', 1, '+', 'y', ')', '.']).
pass(['return', '(', '(', '(', '(', '(', '(', '(', '(', '(', '(', 6, '+', 3, ')', ')', ')', ')', ')', ')', ')', ')', ')', ')', '.']).

fail(List) :- \+ pass(List).

% % Should fail:
fail(['var', 'a','<-', '(', 5, '*', 2, ')', ';']).
fail(['return', '(', 'x', '+', 1, ')', '.']).
fail(['return', '(', 1, '/', 0, ')', '.']).
fail(['return', '(', 1, ')', '.', 'var', 'x', ';']).
fail(['var', 'x', ';', 'var', 'x', ';', 'x','<-', '(', 5, '*', 2, ')', ';', 'return', '(', 'x', '+', 1, ')', '.']).
fail(['var', 'x', ';', 'return', '(', 'x', '+', 1, ')', '.']).
fail(['var', 'x', ';', 'var', 'x','<-', '(', 5, '*', 2, ')', ';', 'return', '(', 'x', '+', 1, ')', '.']).
fail(['var', 'x', ';', 'x','<-', '(', 5, '*', 2, ')', ';', 'var', 'x', '<-', 1, ';', 'return', '(', 'x', '+', 1, ')', '.']).
